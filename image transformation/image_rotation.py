# -*- coding: utf-8 -*-
"""input_image.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n4mOXiDrCxQL0abSwwIbBP5YXaFn_Axj
"""

import torch
from torchvision import transforms
from google.colab.patches import cv2_imshow
import cv2
import numpy as np
from random import *
from imgaug import augmenters as iaa
import math
# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/My Drive/image_cutout/

####Rotate image without using augmenters 
path='이미지 상대경로 및 절대경로'

rotate=iaa.Affine(rotate=20)
rotation=cv2.imread(path)
label=open('/content/drive/My Drive/label_cutout/0cb9kbYC-3fGIETFmA2lJQ.txt','r')
rotation=rotate(image=rotation)
list=label.readline()
while(list):
  list=list.split()
  x_center=float(list[1])*1664
  y_center=float(list[2])*832
  height=float(list[4])*832
  width=float(list[3])*1664



  cosine20=0.93969
  sine20=0.34202
  #195 and 260 are empirical numbers suitable for image of size 1664X832
  x_rotation=x_center*cosine20-y_center*sine20+195#You have to modify 195 according to your input image_size
  y_rotation=x_center*sine20+y_center*cosine20-260#You have to modify 260 according to your input image_size
  print(1*sine20+1*cosine20)
  height_new=height*0.91294525072+width*0.40808206181
  width_new=height*0.40808206181+width*0.91294525072
  x1=int(x_rotation-width_new/2)
  y1=int(y_rotation-height_new/2)
  x2=int(x_rotation+width_new/2)
  y2=int(y_rotation+height_new/2)
  

  rotation = cv2.rectangle(rotation, (x1, y1), (x2,y2), (0, 0, 0))
  list=label.readline()
cv2_imshow(rotation)

